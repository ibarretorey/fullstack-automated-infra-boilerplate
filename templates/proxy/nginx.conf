user nginx;
worker_processes auto;

events {
  worker_connections  1024;
}

http {
  include               /etc/nginx/mime.types;
  default_type          text/html;
{{#if (eq ENV "development") }}
  ssl_session_cache     shared:SSL:10m;
  ssl_session_timeout   10m;
{{/if}}
  server {
{{#if (eq ENV "development") }}
    listen              80;
    server_name         {{ DOMAIN }};
{{ else }}
    listen              443 ssl;
    server_name         {{ DOMAIN }};
    ssl_certificate     {{ DOMAIN }}.crt;
    ssl_certificate_key {{ DOMAIN }}.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;
{{/if}}
    keepalive_timeout   100;
    uwsgi_read_timeout 300s;
    proxy_read_timeout 300;
    uwsgi_send_timeout 300s;
    proxy_send_timeout 300;
    root                /usr/share/nginx/html;
    error_page          404 /;
    location /favicon.ico {
      alias               /etc/nginx/favicon.ico;
    }

# =================================================
#                 Api
# =================================================

    location /graphql {
      proxy_pass          http://api:{{ API_PORT }}/graphql;
      include             /etc/nginx/proxy.conf;
    }

    location /graphqlws {
      proxy_pass          http://api:{{ API_PORT }}/graphql;
      include             /etc/nginx/proxy.conf;
      proxy_set_header    Upgrade $http_upgrade;
      proxy_set_header    Connection "Upgrade";
    }

# =================================================
#                 Keycloak
# =================================================
    location /auth {
      proxy_pass          http://keycloak:8080/auth;
      include             /etc/nginx/proxy.conf;
    }

# =================================================
#                 Dashboard
# =================================================
{{#if (eq ENV "development") }}
    location / {
      proxy_pass          http://dashboard/;
      include             /etc/nginx/proxy.conf;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
    }
{{else}}
    location /manifest.json {
      proxy_pass          http://dashboard/manifest.json;
      include             /etc/nginx/proxy.conf;
    }

    location ~ ^\/(android|apple|logo).*\.(png)$ {
      proxy_pass          http://dashboard;
      include             /etc/nginx/proxy.conf;
    }

    location ~ ^\/(main).*\.(js|css|map)$ {
      proxy_pass          http://dashboard;
      include             /etc/nginx/proxy.conf;
    }

    location /static/ {
      proxy_pass          http://dashboard/static/;
      include             /etc/nginx/proxy.conf;
    }

    location /sockjs-node/ {
      proxy_pass          http://dashboard/sockjs-node/;
      include             /etc/nginx/proxy.conf;
      proxy_set_header    Upgrade $http_upgrade;
      proxy_set_header    Connection "Upgrade";
    }

    location / {
      try_files           $uri /index.html;
      proxy_pass          http://dashboard/;
      include             /etc/nginx/proxy.conf;
    }
  }
{{/if}}
  }
}